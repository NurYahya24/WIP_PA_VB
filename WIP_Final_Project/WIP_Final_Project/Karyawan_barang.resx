<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="btnNext.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
  <data name="btnPrev.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>