<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="PictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>